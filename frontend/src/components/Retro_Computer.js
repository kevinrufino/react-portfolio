/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useFrame } from "@react-three/fiber"
import { useGLTF } from '@react-three/drei'

export default function Model({ ...props }) {
  const group = useRef()
  const { nodes } = useGLTF('/Retro_Computer.glb')
  let positionX = 5, positionY = 0, positionZ = -5
  let rotationX = 1.62, rotationY = .07, rotationZ = -4

  // Animate model
  useFrame((state) => {
    const t = state.clock.getElapsedTime()
    group.current.rotation.z = -0.2 - (1 + Math.sin(t / 1.5)) / 20
    group.current.rotation.x = Math.cos(t / 4) / 8
    group.current.rotation.y = Math.sin(t / 4) / 8
    group.current.position.y = (1 + Math.sin(t / 1.5)) / 10
  })

  return (
    <group ref={group} {...props} dispose={null}>
      <mesh 
      geometry={nodes.Part1.geometry} 
      position={[positionX, positionY, positionZ]}
      rotation={[rotationX, rotationY, rotationZ]} 
      scale={8}
      >
        <meshBasicMaterial wireframe={false} color={'#ffcc70'}/>
      </mesh>
      <mesh 
      geometry={nodes.Part2.geometry} 
      position={[positionX, positionY, positionZ]}
      rotation={[rotationX, rotationY, rotationZ]} 
      scale={8}
      >
        <meshBasicMaterial wireframe={true} color={'#ffcc70'}/>
      </mesh>
      <mesh 
      geometry={nodes.Part1.geometry} 
      position={[positionX, positionY, positionZ]}
      rotation={[rotationX, rotationY, rotationZ]} 
      scale={7.98}
      >
        <meshBasicMaterial color={'#000'}/>
      </mesh>
      <mesh 
      geometry={nodes.Part2.geometry}
      position={[positionX, positionY, positionZ]}
      rotation={[rotationX, rotationY, rotationZ]} 
      scale={7.98}
      >
        <meshBasicMaterial color={'#000'}/>
      </mesh>
    </group>
  )
}

useGLTF.preload('/Retro_Computer.glb')
